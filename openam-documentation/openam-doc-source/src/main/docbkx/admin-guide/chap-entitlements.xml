<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2012 ForgeRock AS
  !    
-->
<chapter xml:id='chap-entitlements'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>Defining Entitlements</title>
 
 <para>This chapter covers how to define entitlements for fine-grained
 authorization to access particular resources.</para>
 
 <section xml:id="about-entitlements">
  <title>About Entitlements</title>
  <indexterm><primary>Authorization</primary></indexterm>
  <indexterm><primary>Entitlements</primary></indexterm>
  <indexterm><primary>Policy</primary></indexterm>
  <para>OpenAM <firstterm>entitlements</firstterm> serve much the same purpose
  as OpenAM policies, defining who has access to what, under what conditions.
  OpenAM stores and manages policies centrally using the standard eXtensible
  Access Control Markup Language (XACML). You can access OpenAM entitlements
  and policy decisions using the RESTful web interface, for even lighter weight
  policy enforcement than with OpenAM policy agents.</para>
  
  <itemizedlist>
   <para>The OpenAM entitlements service uses XACML terminology to refer to
   the different points dealing with policy.</para>
   
   <listitem>
    <para>OpenAM serves as a <firstterm>policy administration point</firstterm>
    (PAP) where you define, store, and manage policies. OpenAM uses the
    configuration directory to store entitlements, whereas profiles are stored
    in the identity repository (user data store).</para>
   </listitem>
   <listitem>
    <para>OpenAM also serves as a <firstterm>policy decision point</firstterm>
    (PDP), evaluating policies and issuing authorization decisions, and as a
    <firstterm>policy information point</firstterm>, providing the information
    needed for authorization decisions.</para>
   </listitem>
   <listitem>
    <para>OpenAM policy agents act as <firstterm>policy enforcement
    points</firstterm>, obtaining decisions from PDPs to protect access to
    resources.</para>
   </listitem>
  </itemizedlist>
  
  <para>Entitlement policies define who has who has access to what, under what
  conditions, in the same way that other OpenAM policies define policy.
  Entitlement policies do let you define virtual subjects and subjects based on
  attribute lookup to determine who has access to the resources.</para>
  
  <para>Entitlements apply for <firstterm>applications</firstterm>, which in
  this context mean protected resources that share a common set of actions
  and related policies. For example, the web agent application protects web
  resources accessed through HTTP GET and POST actions using a web policy
  agent to enforce decisions to allow or deny access. You can also define more
  specific applications as demonstrated by the examples delivered with
  OpenAM.</para>
  
  <para><firstterm>Delegations</firstterm> grant specific users privileges
  to manage policies.</para>
 </section>
 
 <section xml:id="managing-entitlements-cli">
  <title>Managing Entitlements on the Command Line</title>
  <indexterm>
   <primary>Authorization</primary>
   <secondary>Configuring</secondary>
  </indexterm>
  <indexterm>
   <primary>Entitlements</primary>
   <secondary>Configuring</secondary>
  </indexterm>
  <indexterm>
   <primary>Policy</primary>
   <secondary>Configuring</secondary>
  </indexterm>
  <para>To manage entitlements, you can use the <command>ssoadm</command>
  command. The <command>ssoadm</command> command provides several other
  subcommands for managing entitlements in addition to those shown here.</para>
  
  <procedure xml:id="export-entitlements-policy-cli">
   <title>To List Current Policies</title>
   
   <step>
    <para>Use the <command>ssoadm list-xacml</command> command to list current
    policies, ready for export.</para>
    <screen>$ ssoadm list-xacml --realm / --adminid amadmin --password-file /tmp/pwd.txt

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;PolicySet PolicyCombiningAlgId="urn:oasis:names:tc:xacml:3.0:
 rule-combining-algorithm:deny-overrides" Version="2011.10.07.12.22.04.705"
 PolicySetId="/:2011.10.07.12.22.04.704" xmlns="urn:oasis:names:tc:xacml:3.0:
 core:schema:cd-1"&gt;
    &lt;Target/&gt;
... other policies ...
    &lt;Policy RuleCombiningAlgId="urn:oasis:names:tc:xacml:3.0:
 rule-combining-algorithm:deny-overrides" Version="2011.10.07.11.51.27.444"
 PolicyId="New Policy"&gt;
... policy content here ...
    &lt;/Policy&gt;
&lt;/PolicySet&gt;</screen>
   </step>
  </procedure>
  
  <procedure xml:id="import-entitlements-policy-cli">
   <title>To Import an Entitlements Policy</title>
   
   <step>
    <para>Use the <command>ssoadm create-xacml</command> command to import
    a policy.</para>
    <screen>$ ssoadm
 create-xacml
 --realm /
 --xmlfile policy.xml
 --adminid amadmin
 --password-file /tmp/pwd.txt</screen>
   </step>
  </procedure>
  
  <procedure xml:id="create-entitlements-application-cli">
   <title>To Create an Application</title>
   
   <step>
    <para>Use the <command>ssoadm create-appl</command> command to create an
    application type.</para>
    <screen>$ cat application.txt
resources=http://myapp.example.com:80/*
subjects=com.sun.identity.admin.model.IdRepoUserViewSubject
subjects=com.sun.identity.admin.model.VirtualViewSubject
subjects=com.sun.identity.admin.model.OrViewSubject
subjects=com.sun.identity.admin.model.AndViewSubject
conditions=com.sun.identity.admin.model.DateRangeCondition
conditions=com.sun.identity.admin.model.DaysOfWeekCondition
conditions=com.sun.identity.admin.model.IpRangeViewCondition
conditions=com.sun.identity.admin.model.DnsNameViewCondition
conditions=com.sun.identity.admin.model.TimeRangeCondition
conditions=com.sun.identity.admin.model.TimezoneCondition
conditions=com.sun.identity.admin.model.OrViewCondition
conditions=com.sun.identity.admin.model.AndViewCondition
conditions=com.sun.identity.admin.model.NotViewCondition
entitlementCombiner=com.sun.identity.entitlement.DenyOverride
$ ssoadm
 create-appl
 --realm /
 --applicationtype iPlanetAMWebAgentService
 --name myApp
 --adminid amadmin
 --password-file /tmp/pwd.txt
 --datafile application.txt

myApp was created.</screen>
   </step>
  </procedure>
 </section>
</chapter>
